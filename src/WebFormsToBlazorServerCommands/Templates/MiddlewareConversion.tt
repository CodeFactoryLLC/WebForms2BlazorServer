<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="CodeFactory" #>
<#@ assembly name="CodeFactory.DotNet" #>
<#@ assembly name="CodeFactory.VisualStudio" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="CodeFactory" #>
<#@ import namespace="CodeFactory.DotNet" #>
<#@ import namespace="CodeFactory.DotNet.CSharp" #>
<#@ import namespace="CodeFactory.VisualStudio" #>
<#@ import namespace="WebFormsToBlazorServerCommands.Templates" #>
<#
    //Accessing the model data passed in by GenerateSource method.
    CodeFactory.DotNet.CSharp.CsModelStore csModelStore = CsModels;
    if(csModelStore == null) return null;
    if(csModelStore.Model == null) return null;
    if(csModelStore.Model.ModelType != CsModelType.Class) return null;
     
    ICsClass classData = csModelStore.Model as CsClass;
    if(classData == null) return null;
    if(!classData.IsLoaded) return null;
    var fullClassname= $"{classData.Namespace}.{classData.Name}";

    var repositories= csModelStore.Models("repositories");
    var repoMods = repositories.Cast<ICsSource>();

    Dictionary<string, string> namespaces = ModelData as Dictionary<string, string>;
    
#>
using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;
using Microsoft.Extensions.Logging;
using Microsoft.AspNetCore.Components;


namespace <#=namespaces["Namespace"]#>
{
    public class <#=classData.Name #>Middleware
    {
        private readonly RequestDelegate _next;

        public <#=classData.Name #>MyMiddleware(RequestDelegate next)
        {
            _next = next;
        }

        public async Task Invoke(HttpContext context)
        {
            // Do something with context near the beginning of request processing.

            await _next.Invoke(context);

            // Clean up.
        }
    }

    public static class <#=classData.Name #>MiddlewareExtensions
    {
        public static IApplicationBuilder Use<#=classData.Name #>Middleware(this IApplicationBuilder builder)
        {
            return builder.Use<#=classData.Name #>Middleware<<#=classData.Name #>Middleware>();
        }
    }
}